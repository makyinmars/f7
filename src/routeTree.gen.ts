/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as TodoTodoIdRouteImport } from './routes/todo/$todoId'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as adminDashboardRouteRouteImport } from './routes/(admin)/dashboard/route'
import { Route as adminDashboardIndexRouteImport } from './routes/(admin)/dashboard/index'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoTodoIdRoute = TodoTodoIdRouteImport.update({
  id: '/todo/$todoId',
  path: '/todo/$todoId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const adminDashboardRouteRoute = adminDashboardRouteRouteImport.update({
  id: '/(admin)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const adminDashboardIndexRoute = adminDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => adminDashboardRouteRoute,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof adminDashboardRouteRouteWithChildren
  '/auth/signup': typeof AuthSignupRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard/': typeof adminDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/signup': typeof AuthSignupRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard': typeof adminDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(admin)/dashboard': typeof adminDashboardRouteRouteWithChildren
  '/auth/signup': typeof AuthSignupRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/auth/': typeof AuthIndexRoute
  '/(admin)/dashboard/': typeof adminDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/signup'
    | '/todo/$todoId'
    | '/auth'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/signup' | '/todo/$todoId' | '/auth' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(admin)/dashboard'
    | '/auth/signup'
    | '/todo/$todoId'
    | '/auth/'
    | '/(admin)/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  adminDashboardRouteRoute: typeof adminDashboardRouteRouteWithChildren
  AuthSignupRoute: typeof AuthSignupRoute
  TodoTodoIdRoute: typeof TodoTodoIdRoute
  AuthIndexRoute: typeof AuthIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$' | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$' | '/api/trpc/$'
  id: '__root__' | '/api/auth/$' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/$todoId': {
      id: '/todo/$todoId'
      path: '/todo/$todoId'
      fullPath: '/todo/$todoId'
      preLoaderRoute: typeof TodoTodoIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(admin)/dashboard': {
      id: '/(admin)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof adminDashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(admin)/dashboard/': {
      id: '/(admin)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof adminDashboardIndexRouteImport
      parentRoute: typeof adminDashboardRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface adminDashboardRouteRouteChildren {
  adminDashboardIndexRoute: typeof adminDashboardIndexRoute
}

const adminDashboardRouteRouteChildren: adminDashboardRouteRouteChildren = {
  adminDashboardIndexRoute: adminDashboardIndexRoute,
}

const adminDashboardRouteRouteWithChildren =
  adminDashboardRouteRoute._addFileChildren(adminDashboardRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  adminDashboardRouteRoute: adminDashboardRouteRouteWithChildren,
  AuthSignupRoute: AuthSignupRoute,
  TodoTodoIdRoute: TodoTodoIdRoute,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
